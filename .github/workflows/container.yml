name: docker build
on:
  push:
    branches:
      - master
    tags:
      - v*
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v5

      - name: Generate tags
        id: tags
        uses: greboid/docker-tags-action@v6.0.4
        with:
          separator: ' '
          fullname: 'false'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Development image
        id: build-image-dev
        if: startsWith(github.ref, 'refs/heads/master')
        uses: redhat-actions/buildah-build@v2.13
        with:
          dockerfiles: Dockerfile
          image: ${{ github.repository }}
          tags: ${{ steps.tags.outputs.tags }}
          extra-args: >
            --timestamp
            0
            --build-arg
            BUILD=staging
      - name: Build Production image
        id: build-image-prod
        if: startsWith(github.ref, 'refs/tags/v')
        uses: redhat-actions/buildah-build@v2.13
        with:
          dockerfiles: Dockerfile
          image: ${{ github.repository }}
          tags: ${{ steps.tags.outputs.tags }}
          extra-args: >
            --timestamp
            0
            --build-arg
            BUILD=build
      - name: Push to GHCR Development
        if: startsWith(github.ref, 'refs/heads/master')
        uses: redhat-actions/push-to-registry@v2.8
        with:
          image: ${{ steps.build-image-dev.outputs.image }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.tags.outputs.tags }}
      - name: Push to GHCR Production
        if: startsWith(github.ref, 'refs/tags/v')
        uses: redhat-actions/push-to-registry@v2.8
        with:
          image: ${{ steps.build-image-prod.outputs.image }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.tags.outputs.tags }}
